{"version":3,"sources":["AppBar/index.js","HomePage/Body/index.js","HomePage/Cards/Card.js","HomePage/Cards/index.js","HomePage/index.js","Translation/en.js","Translation/fa.js","Translation/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","SocialLink","props","link","icon","IconButton","href","edge","color","ChangeLanguage","i18n","useTranslation","new_language","language","Button","onClick","changeLanguage","Typography","TheAppBar","classes","t","className","AppBar","position","Toolbar","variant","minHeight","flex","flexDirection","marginBottom","marginTop","header","margin","content","width","listItem","marginLeft","bullet","fontSize","image","borderRadius","height","ShowFeatures","List","map","item","ListItem","key","ListItemIcon","size","ListItemText","primary","Body","Paper","elevation","Grid","container","spacing","xs","sm","src","process","alt","MainCard","Card","CardHeader","avatar","Avatar","subheader","CardContent","component","CardActions","disableSpacing","aria-label","Cards","Home","EnTranslation","hello","bodyContent","use","initReactI18next","init","resources","en","translation","en_dict","fa","fa_dict","lng","fallbackLng","interpolation","escapeValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f73882b7.chunk.js","sourcesContent":["// @flow\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/ToolBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChartIcons from \"@material-ui/icons/ShowChartOutlined\";\nimport GithubIcon from \"@material-ui/icons/GitHub\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\n\nimport React from \"react\";\nimport type { Node } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1\n  },\n\n  title: {\n    flexGrow: 1\n  }\n}));\n\ntype SLinkProps = {\n  icon: Node,\n  link: string\n};\nfunction SocialLink(props: SLinkProps) {\n  const { link, icon } = props;\n  return (\n    <IconButton href={link} edge=\"start\" color=\"inherit\">\n      {icon}\n    </IconButton>\n  );\n}\n\nfunction ChangeLanguage() {\n  const { i18n } = useTranslation();\n  const { language } = i18n;\n  const new_language: string = language === \"fa\" ? \"en\" : \"fa\";\n  return (\n    <Button color=\"inherit\" onClick={() => i18n.changeLanguage(new_language)}>\n      <Typography>EN/FA</Typography>\n    </Button>\n  );\n}\nfunction TheAppBar() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <ChartIcons />\n          <Typography variant=\"h6\" className={classes.title}>\n            {t(\"title\")}\n          </Typography>\n          <SocialLink\n            link=\"https://github.com/ghodsizadeh/tehran-stocks\"\n            icon={<GithubIcon />}\n          />\n          <SocialLink\n            link=\"https://twitter.com/ghodsizadeh\"\n            icon={<TwitterIcon />}\n          />\n          <SocialLink\n            link=\"https://idpay.ir/ghodsizadeh\"\n            icon={<CardGiftcardIcon />}\n          />\n          <ChangeLanguage />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default TheAppBar;\n","// @flow\nimport React from \"react\";\nimport {\n  Paper,\n  makeStyles,\n  Theme,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Bullet from \"@material-ui/icons/FiberManualRecord\";\nimport { useTranslation } from \"react-i18next\";\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minHeight: \"300px\",\n    flex: 1,\n    flexDirection: \"column\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\"\n  },\n  header: {\n    margin: \"8px\"\n    // width: \"55%\"\n  },\n  content: {\n    margin: \"10px\",\n    width: \"60%\"\n  },\n  listItem: {\n    marginLeft: \"-30px\"\n  },\n  bullet: {\n    color: \"black\",\n    fontSize: \"14px\"\n  },\n  image: {\n    borderRadius: \"50px\",\n    height: \"80%\"\n  }\n}));\n\nfunction ShowFeatures() {\n  const { t } = useTranslation();\n  const features: Array<string> = [\"a\", \"b\", \"c\"];\n  const classes = useStyles();\n  return (\n    <List>\n      {features.map(item => (\n        <ListItem key={item}>\n          <ListItemIcon>\n            <Bullet className={classes.bullet} size={10} color=\"black\" />\n          </ListItemIcon>\n          <ListItemText className={classes.listItem} primary={t(item)} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\nexport default function Body() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper elevation={5} className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={7}>\n          <Typography className={classes.header} variant=\"h2\" color=\"primary\">\n            {t(\"header\")}\n          </Typography>\n          <Typography className={classes.content}>\n            {t(\"bodyContent\")}\n          </Typography>\n          <ShowFeatures />\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <img\n            className={classes.image}\n            //$FlowFixMe\n            src={process.env.PUBLIC_URL + \"/stock.jpg\"}\n            alt=\"stock\"\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","// @flow\nimport { Card, Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport React from \"react\";\n\nexport default function MainCard() {\n  return (\n    <Card>\n      <CardHeader\n        avatar={<Avatar>M</Avatar>}\n        title=\"Shrimp and Chorizo Paella\"\n        subheader=\"September 14, 2016\"\n      ></CardHeader>\n\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          This impressive paella is a perfect party dish and a fun meal to cook\n          together with your guests. Add 1 cup of frozen peas along with the\n          mussels, if you like.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport MainCard from \"./Card\";\nexport default function Cards() {\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={4}>\n          <MainCard />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <MainCard />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <MainCard />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","// @flow\nimport AppBar from \"AppBar\";\nimport React from \"react\";\nimport Body from \"./Body\";\nimport Cards from \"./Cards\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: \"15px\"\n  }\n}));\n\nfunction Home() {\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar />\n      <div className={classes.root}>\n        <Body />\n        <Cards />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","const EnTranslation = {\n  \"Welcome to React\": \"Welcome to React and react-i18next\",\n  hello: \"hello Man\",\n  title: \"Tehran Stocks in Python\",\n  header: \"Tehran Stocks Historical Data\",\n  bodyContent: [\"a,\", \"b\", \"c\"]\n  //   bodyContent:'A Package that let you download historical price of tehran_stocks'\n};\n\nexport default EnTranslation;\n","const EnTranslation = {\n  \"Welcome to React\": \"Welcome to React and react-i18next\",\n  hello: \"hello Man\",\n  title: \"این چیه\"\n};\n\nexport default EnTranslation;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en_dict from \"./en\";\nimport fa_dict from \"./fa\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: {\n        translation: en_dict\n      },\n      fa: {\n        translation: fa_dict\n      }\n    },\n    lng: \"en\",\n    fallbackLng: [\"en\", \"fa\"],\n\n    interpolation: {\n      escapeValue: false\n    }\n  });\nexport default i18n;\n","// @flow\nimport Home from \"HomePage\";\nimport \"./App.css\";\nimport \"Translation\";\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}